/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./Scrollbar/temp1531099104544.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./Scrollbar/temp1531099104544.js":
/*!****************************************!*\
  !*** ./Scrollbar/temp1531099104544.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar utils = {\n    isTouch: function isTouch() {\n        return 'ontouchstart' in document;\n    },\n    wheel: function wheel(elem, callback, useCapture) {\n        var prefix = \"\",\n            _addEventListener = void 0,\n            onwheel = void 0,\n            support = void 0;\n        // detect event model\n        if (window.addEventListener) {\n            _addEventListener = \"addEventListener\";\n        } else {\n            _addEventListener = \"attachEvent\";\n            prefix = \"on\";\n        }\n\n        // detect available wheel event\n        support = \"onwheel\" in document ? \"wheel\" : document.onmousewheel !== undefined ? \"mousewheel\" : // Webkit / IE\n        \"DOMMouseScroll\"; // firefox\n\n        _addWheelListener(elem, support, callback, useCapture);\n\n        // handle MozMousePixelScroll in older Firefox\n        if (support === \"DOMMouseScroll\") {\n            _addWheelListener(elem, \"MozMousePixelScroll\", callback, useCapture);\n        }\n\n        function _addWheelListener(elem, eventName, callback, useCapture) {\n            elem[_addEventListener](prefix + eventName, support === \"wheel\" ? callback : function (originalEvent) {\n                !originalEvent && (originalEvent = window.event);\n\n                // create a normalized event object\n                var event = {\n                    // keep a ref to the original event object\n                    originalEvent: originalEvent,\n                    target: originalEvent.target || originalEvent.srcElement,\n                    type: \"wheel\",\n                    deltaMode: originalEvent.type === \"MozMousePixelScroll\" ? 0 : 1,\n                    deltaX: 0,\n                    deltaZ: 0,\n                    preventDefault: function preventDefault() {\n                        originalEvent.preventDefault ? originalEvent.preventDefault() : originalEvent.returnValue = false;\n                    }\n                };\n\n                // calculate deltaY (and deltaX) according to the event\n                if (support === \"mousewheel\") {\n                    event.deltaY = -1 / 40 * originalEvent.wheelDelta;\n                    // Webkit also support wheelDeltaX\n                    originalEvent.wheelDeltaX && (event.deltaX = -1 / 40 * originalEvent.wheelDeltaX);\n                } else {\n                    event.deltaY = originalEvent.detail;\n                }\n\n                // it's time to fire the callback\n                return callback(event);\n            }, useCapture || false);\n        }\n    },\n    contains: function contains(target, context) {\n        if (context.contains) {\n            return context.contains(target);\n        } else {\n            if (target === context) {\n                return true;\n            } else {\n                var children = context.getElementsByTagName('*'),\n                    len = children.length,\n                    i = 0;\n                for (; i < len; i++) {\n                    if (target === children[i]) return true;\n                }\n            }\n        }\n        return false;\n    },\n    addClass: function addClass(el, cls) {\n        if (el.classList) {\n            el.classList.add(cls);\n        } else {\n            var _utils = this,\n                list = el.className.split(/\\s+/);\n            if (_utils.indexOf(list, cls) === -1) {\n                list.push(cls);\n            }\n            el.className = list.join(' ');\n        }\n    },\n    indexOf: function indexOf(arr, item) {\n        if (arr.indexOf) {\n            return arr.indexOf(item);\n        } else {\n            for (var i = 0, l = arr.length; i < l; i++) {\n                if (arr[i] === item) return i;\n            }return -1;\n        }\n    },\n    removeClass: function removeClass(el, cls) {\n        if (el.classList) {\n            el.classList.remove(cls);\n        } else {\n            var _utils2 = this,\n                list = el.className.split(/\\s+/),\n                index = void 0;\n            if ((index = _utils2.indexOf(list, cls)) !== -1) {\n                list.splice(index, 1);\n            }\n            el.className = list.join(' ');\n        }\n    }\n};\n\nvar Scrollbar = function () {\n    /**\r\n     * 必须的id\r\n     * @param id\r\n     */\n    function Scrollbar(id) {\n        _classCallCheck(this, Scrollbar);\n\n        var isTouch = utils.isTouch();\n        this.body = document.getElementById(id);\n        if (!this.body) throw new Error('Element is not found by id \"' + id + '\"');\n\n        this.content = this.body.querySelector('.scroll-content');\n        this.scrollbar = {\n            y: this.body.querySelector('.scroll-y'),\n            x: this.body.querySelector('.scroll-x')\n        };\n        this.thumb = {\n            y: null,\n            x: null\n        };\n\n        this.events = ['mousedown', 'mousemove', 'mouseup'];\n        if (isTouch) {\n            this.events = ['touchstart', 'touchmove', 'touchend'];\n            if (this.scrollbar.y) Scrollbar.touchSscroll(this, 'scrollTop', 'clientY', 'maxY');\n            if (this.scrollbar.x) Scrollbar.touchSscroll(this, 'scrollLeft', 'clientX', 'maxX');\n        }\n\n        if (this.scrollbar.y) {\n            this.thumb.y = this.scrollbar.y.querySelector('.scroll-thumb');\n            Scrollbar.createScroll(this, 'y', 'offsetHeight', 'offsetTop', 'height', 'top', 'scrollHeight', 'scrollTop', 'clientY', 'offsetY', 'maxY', 'spaceY');\n            utils.wheel(this.content, function (e) {\n                e.preventDefault();\n                this.scrollTop += e.deltaY;\n            }, { passive: false });\n        }\n        if (this.scrollbar.x) {\n            this.thumb.x = this.scrollbar.x.querySelector('.scroll-thumb');\n            Scrollbar.createScroll(this, 'x', 'offsetWidth', 'offsetLeft', 'width', 'left', 'scrollWidth', 'scrollLeft', 'clientX', 'offsetX', 'maxX', 'spaceX');\n        }\n    }\n    /**\r\n     * 创建属性和绑定事件，拖拽滚动条产生的动作。\r\n     * 不应在外部定义或调用此方法\r\n     * @param _\r\n     * @param y\r\n     * @param offsetHeight\r\n     * @param offsetTop\r\n     * @param height\r\n     * @param top\r\n     * @param scrollHeight\r\n     * @param scrollTop\r\n     * @param clientY\r\n     * @param offsetY\r\n     * @param maxY\r\n     * @param spaceY\r\n     * @returns {*}\r\n     */\n\n\n    _createClass(Scrollbar, [{\n        key: \"hide\",\n\n\n        /**\r\n         * 隐藏滚动条。在移动端可能不需要显示滚动条，故提供此方法\r\n         * @param which\r\n         */\n        value: function hide(which) {\n            if (this.scrollbar[which].parentNode === this.body) this.body.removeChild(this.scrollbar[which]);\n        }\n\n        /**\r\n         * 显示滚动条\r\n         * @param which\r\n         */\n\n    }, {\n        key: \"show\",\n        value: function show(which) {\n            if (this.scrollbar[which].parentNode !== this.body) this.body.appendChild(this.scrollbar[which]);\n        }\n    }], [{\n        key: \"createScroll\",\n        value: function createScroll(_, y, offsetHeight, offsetTop, height, top, scrollHeight, scrollTop, clientY, offsetY, maxY, spaceY) {\n            var oh = void 0,\n                sh = void 0,\n                th = void 0,\n                isTouch = utils.isTouch(),\n                start = 0,\n                end = 0,\n                cur = 0,\n                prev = 0,\n                result = 0,\n                dir = 0,\n                prevent = { passive: false };\n\n            oh = _.content[offsetHeight];\n            sh = _.content[scrollHeight];\n\n            _.thumb[y].style[height] = oh / sh * oh + 'px';\n\n            th = _.thumb[y][offsetHeight];\n\n            Object.defineProperty(_, maxY, { value: sh - oh });\n            Object.defineProperty(_, spaceY, { value: oh - th });\n            Object.defineProperty(_, scrollHeight, { value: sh });\n            Object.defineProperty(_, scrollTop, {\n                set: function set(val) {\n                    if (val !== _.content[scrollTop]) {\n                        _.content[scrollTop] = val;\n                    }\n                },\n                get: function get() {\n                    return _.content[scrollTop];\n                }\n            });\n\n            _.content.addEventListener('scroll', function () {\n                _.thumb[y].style[top] = this[scrollTop] / _[maxY] * _[spaceY] + 'px';\n                _[scrollTop] = this[scrollTop];\n            });\n            _.scrollbar[y].addEventListener(_.events[0], function (e) {\n                if (e.button > 0 || utils.contains(e.target, _.thumb[y])) return false;\n                e = isTouch ? e.targetTouches[0] : e;\n                _.content[scrollTop] = e[offsetY] / this[offsetHeight] * _[maxY];\n            });\n\n            _.thumb[y].addEventListener(_.events[0], startFn, prevent);\n\n            function startFn(e) {\n                e.preventDefault();\n                e = isTouch ? e.targetTouches[0] : e;\n                start = e[clientY];\n                end = prev = start;\n                cur = _.thumb[y][offsetTop];\n                result = 0;\n\n                utils.addClass(document.body, 'scroll-unselect');\n\n                document.addEventListener(_.events[1], moveFn, prevent);\n                document.addEventListener(_.events[2], endFn);\n            }\n            function moveFn(e) {\n                e.preventDefault();\n                e = isTouch ? e.targetTouches[0] : e;\n                end = e[clientY];\n                dir = end - prev < 0 ? -1 : 1;\n\n                result = end - start + cur;\n\n                if (_.content[scrollTop] <= 2 && dir < 0) {\n                    start = end;\n                    cur = _.thumb[y][scrollTop];\n                    result = 0;\n                } else if (_.content[scrollTop] >= _[maxY] - 2 && dir > 0) {\n                    start = end;\n                    cur = _.thumb[y][offsetTop];\n                    result = _[spaceY];\n                }\n                _.thumb[y].style[top] = result + 'px';\n                _[scrollTop] = result / _[spaceY] * _[maxY];\n                prev = end;\n            }\n            function endFn() {\n                document.removeEventListener(_.events[1], moveFn, prevent);\n                document.removeEventListener(_.events[2], endFn);\n                utils.removeClass(document.body, 'scroll-unselect');\n            }\n        }\n\n        /**\r\n         * 移动端拖拽内容时\r\n         * 不应在外部定义或调用此方法\r\n         * @param _\r\n         * @param scrollTop\r\n         * @param clientY\r\n         * @param maxY\r\n         */\n\n    }, {\n        key: \"touchSscroll\",\n        value: function touchSscroll(_, scrollTop, clientY, maxY) {\n            var touchY = 0,\n                end = 0,\n                startTop = 0,\n                prev = 0,\n                speed = 0,\n                prevent = { passive: false },\n                timer = void 0;\n            _.content.addEventListener('touchstart', function (e) {\n                e.preventDefault();\n\n                touchY = e.targetTouches[0][clientY];\n                startTop = _.content[scrollTop];\n                prev = touchY;\n                document.addEventListener('touchmove', moveFn, prevent);\n                document.addEventListener('touchend', endFn);\n            }, prevent);\n\n            function moveFn(e) {\n                e.preventDefault();\n                end = e.targetTouches[0][clientY];\n                speed = end - prev;\n                prev = end;\n                _.content[scrollTop] = startTop + (touchY - end);\n            }\n\n            function endFn() {\n                var d = Math.abs(speed),\n                    dis = end - touchY,\n                    dir = dis < 0 ? 1 : -1;\n                document.removeEventListener('touchmove', moveFn, prevent);\n                document.removeEventListener('touchend', endFn);\n\n                //缓冲\n                if (Math.abs(dis) > 5) {\n                    if (timer) clearInterval(timer);\n                    timer = setInterval(function () {\n                        d *= .8;\n                        if (d < 1) clearInterval(timer);\n                        _.content[scrollTop] += d * dir;\n                    }, 16.6);\n                }\n            }\n        }\n    }]);\n\n    return Scrollbar;\n}();\n\nwindow.Scrollbar = Scrollbar;\n\n//# sourceURL=webpack:///./Scrollbar/temp1531099104544.js?");

/***/ })

/******/ });