/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./Player/temp1528035626293.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./Player/temp1528035626293.js":
/*!*************************************!*\
  !*** ./Player/temp1528035626293.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar utils = {\n    timemat: function timemat(time) {\n        var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n        var h = !type ? 0 : Math.floor(time / 3600),\n            i = Math.floor((time - h * 3600) / 60),\n            s = Math.floor(time - h * 3600 - i * 60);\n\n        h = h < 10 ? '0' + h : h;\n        i = i < 10 ? '0' + i : i;\n        s = s < 10 ? '0' + s : s;\n        return (!type ? '' : h + ':') + i + ':' + s;\n    },\n    addEvent: function addEvent(el, evt, fn) {\n        if (window.addEventListener) {\n            el.addEventListener(evt, fn);\n        } else if (window.attachEvent) {\n            el.addEventListener('on' + evt, fn);\n        }\n    },\n    addClass: function addClass(el, cls) {\n        if (el.classList) {\n            el.classList.add(cls);\n        } else {\n            var list = el.className.split(/\\s+/);\n            if (list.indexOf(cls) === -1) {\n                list.push(cls);\n            }\n            el.className = list.join(' ');\n        }\n    },\n    removeClass: function removeClass(el, cls) {\n        if (el.classList) {\n            el.classList.remove(cls);\n        } else {\n            var list = el.className.split(/\\s+/),\n                index = void 0;\n            if ((index = list.indexOf(cls)) !== -1) {\n                list.splice(index, 1);\n            }\n            el.className = list.join(' ');\n        }\n    },\n    isFullscreen: function isFullscreen() {\n        return document.fullscreen || document.webkitIsFullScreen || document.mozFullScreen || false;\n    },\n    exitFullscreen: function exitFullscreen() {\n        if (document.exitFullscreen) {\n            document.exitFullscreen();\n        } else if (document.webkitCancelFullScreen) {\n            document.webkitCancelFullScreen();\n        } else if (document.webkitExitFullscreen) {\n            document.webkitExitFullscreen();\n        } else if (document.mozCancelFullScreen) {\n            document.mozCancelFullScreen();\n        } else if (document.msExitFullscreen) {\n            document.msExitFullscreen();\n        }\n    },\n    fullscreen: function fullscreen(el) {\n        if (el.requestFullscreen) {\n            el.requestFullscreen();\n        } else if (el.webkitRequestFullscreen) {\n            el.webkitRequestFullscreen();\n        } else if (el.mozRequestFullScreen) {\n            el.mozRequestFullScreen();\n        } else if (el.msRequestFullscreen) {\n            el.msRequestFullscreen();\n        }\n    },\n    readLyric: function readLyric(lrc) {\n        var lrcCache = {};\n        lrc.split(/\\n+/).join('#').replace(/\\[([\\d:.\\[\\]]+)\\]([\\s\\S]*?)#/ig, function ($0, $1, $2) {\n            for (var keys = $1.split(/\\]\\s*\\[/), len = keys.length, i = 0; i < len; i++) {\n                lrcCache[keys[i]] = $2;\n            }\n        });\n        return lrcCache;\n    },\n    time: function time(timemat) {\n        var arr = timemat.split(/[:：]+/);\n        if (arr.length === 3) {\n            return parseInt(arr[0]) * 3600 + parseInt(arr[1]) * 60 + parseFloat(arr[2]);\n        } else {\n            return parseInt(arr[0]) * 60 + parseFloat(arr[1]);\n        }\n    }\n};\n\nvar Player = function () {\n    function Player(id) {\n        var opt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n        _classCallCheck(this, Player);\n\n        if ((typeof id === 'undefined' ? 'undefined' : _typeof(id)) === 'object') {\n            opt = id;\n            id = opt.selector;\n        }\n        if (typeof id === 'string') {\n            if ((typeof opt === 'undefined' ? 'undefined' : _typeof(opt)) === 'object') {\n                this.options = opt;\n            }\n            this.__define__('xhr', {\n                value: new XMLHttpRequest()\n            });\n            this.__define__('lrcData', {\n                writable: true,\n                value: null\n            });\n            this.__define__('lrcKeys', {\n                writable: true,\n                value: null\n            });\n            this.__define__('lrcLen', {\n                writable: true,\n                value: 0\n            });\n            this.__define__('timer', {\n                writable: true,\n                value: 0\n            });\n\n            this.__init__(document.querySelector(id));\n\n            this.__define__('private', {\n                value: 0\n            });\n        }\n    }\n\n    _createClass(Player, [{\n        key: '__init__',\n        value: function __init__(box) {\n            this.__check__('init');\n            this.__dom__();\n            this.__ob__();\n\n            this.currentTime = 0;\n            this.volume = .5;\n            this.duration = 0;\n\n            this.__bindEvent__();\n            box.appendChild(this[0]);\n\n            this.setLrcTop();\n        }\n    }, {\n        key: '__dom__',\n        value: function __dom__() {\n            this.__check__('__createDom__');\n            this[0] = document.createElement('div');\n            this[0].className = 'player';\n            this[0].innerHTML = '\\n        <video data-name=\"video\"' + (this.options.src ? ' src=\"' + this.options.src + '\"' : '') + ' poster=\"' + (this.options.poster || '') + '\" class=\"player-video\"></video>\\n        <div data-name=\"lrc\" class=\"player-lrc\"></div>\\n        \\n        <div data-name=\"ctrls\" class=\"player-controls\">\\n            <div class=\"player-slider\">\\n                <div data-name=\"buf\" class=\"player-slider-buf\"></div>\\n                <div data-name=\"thumb\" class=\"player-slider-thumb\"></div>\\n            </div>\\n            <div class=\"player-toolbar\">\\n                <div class=\"player-toolbar-left\">\\n                    <span data-name=\"btn\" class=\"player-btn\"></span>\\n                    <span data-name=\"cur\" class=\"player-current-time\">--:--</span>\\n                    <span data-name=\"dur\" class=\"player-duration\">/ --:--</span>\\n                </div>\\n                <div class=\"player-toolbar-right\">\\n                    <span data-name=\"vswitch\" class=\"player-volume-switch\">\\n                        <i class=\"player-volume-switch-rect\"></i>\\n                        <i class=\"player-volume-switch-tri\"></i>\\n                        <i class=\"player-volume-switch-stat\">\\n                            <i class=\"player-volume-switch-dot1\"></i>\\n                            <i class=\"player-volume-switch-dot2\"></i>\\n                            <i class=\"player-volume-switch-dot3\"></i>\\n                            <i class=\"player-volume-switch-mute\">&times;</i>\\n                        </i>\\n                    </span>\\n                    <span class=\"player-volume-slider\">\\n                        <i data-name=\"vthumb\" class=\"player-volume-slider-thumb\"></i>\\n                    </span>\\n                    <span data-name=\"fscreen\" class=\"player-fullscreen\">\\n                        <i class=\"player-fullscreen-tl\"></i>\\n                        <i class=\"player-fullscreen-tr\"></i>\\n                        <i class=\"player-fullscreen-bl\"></i>\\n                        <i class=\"player-fullscreen-br\"></i>\\n                    </span>\\n                </div>\\n            </div>\\n        </div>';\n\n            this.els = {};\n\n            for (var els = this[0].querySelectorAll('[data-name]'), len = els.length, i = 0; i < len; i++) {\n                this.els[els[i].getAttribute('data-name')] = els[i];\n                els[i].removeAttribute('data-name');\n            }\n        }\n    }, {\n        key: '__define__',\n        value: function __define__(name, obj) {\n            this.__check__('__define__');\n            Object.defineProperty(this, name, obj);\n        }\n    }, {\n        key: '__ob__',\n        value: function __ob__() {\n            this.__check__('__ob__');\n            var _this = this,\n                curtime = void 0,\n                volume = void 0;\n            _this.__define__('currentTime', {\n                set: function set(val) {\n                    if (val !== curtime) {\n                        curtime = val;\n                        _this.els.cur.innerText = utils.timemat(curtime);\n                        _this.els.thumb.style.width = curtime / _this.duration * 100 + '%';\n                    }\n                },\n                get: function get() {\n                    return curtime;\n                }\n            });\n            _this.__define__('volume', {\n                set: function set(val) {\n                    if (val !== volume) {\n                        volume = val;\n                        _this.els.video.volume = volume;\n                        _this.els.vthumb.style.width = volume * 100 + '%';\n                    }\n                },\n                get: function get() {\n                    return volume;\n                }\n            });\n        }\n    }, {\n        key: '__bindEvent__',\n        value: function __bindEvent__() {\n            this.__check__('bindEvent');\n            var _this = this,\n                video = _this.els.video,\n                btn = _this.els.btn;\n\n            utils.addEvent(window, 'resize', function () {\n                _this.setLrcTop();\n            });\n\n            utils.addEvent(video, 'durationchange', function () {\n                _this.duration = this.duration;\n                _this.currentTime = 0;\n                _this.els.dur.innerText = '/ ' + utils.timemat(this.duration);\n                _this.loadLrc(_this.options.lrc);\n            });\n\n            utils.addEvent(video, 'loadeddata', function () {\n                _this.setLrcTop();\n            });\n\n            utils.addEvent(btn, 'click', function () {\n                if (video.paused) {\n                    video.play();\n                    utils.addClass(btn, 'player-btn-playing');\n                } else {\n                    video.pause();\n                    utils.removeClass(btn, 'player-btn-playing');\n                }\n            });\n            utils.addEvent(video, 'timeupdate', function () {\n                try {\n                    _this.els.buf.style.width = video.buffered.end(video.buffered.length - 1) / this.duration * 100 + '%';\n                } catch (err) {}\n\n                _this.currentTime = this.currentTime;\n                _this.showLrc(this.currentTime);\n            });\n\n            utils.addEvent(_this.els.thumb.parentNode, 'click', function (e) {\n                if (video.duration > 0) {\n                    var percent = e.offsetX / this.offsetWidth;\n                    _this.currentTime = percent * video.duration;\n                    video.currentTime = Math.round(percent * video.duration);\n                }\n            });\n            utils.addEvent(_this.els.vthumb.parentNode, 'click', function (e) {\n                _this.volume = e.offsetX / this.offsetWidth;\n            });\n            utils.addEvent(_this.els.fscreen, 'click', function () {\n                if (utils.isFullscreen()) {\n                    utils.exitFullscreen();\n                    utils.removeClass(_this.els.fscreen, 'player-fullscreen-on');\n                } else {\n                    utils.fullscreen(_this[0]);\n                    utils.addClass(_this.els.fscreen, 'player-fullscreen-on');\n                }\n            });\n            utils.addEvent(_this.els.vswitch, 'click', function () {\n                if (video.muted = !video.muted) {\n                    utils.addClass(_this[0], 'player-muted');\n                } else {\n                    utils.removeClass(_this[0], 'player-muted');\n                }\n            });\n\n            utils.addEvent(_this[0], 'mousemove', function (e) {\n                if (_this.timer) clearTimeout(_this.timer);\n\n                if (!_this.els.ctrls.contains(e.target)) {\n                    _this.showMouse();\n                    _this.timer = setTimeout(function () {\n                        _this.hideMouse();\n                    }, 2000);\n                }\n            });\n            utils.addEvent(_this[0], 'mouseleave', function () {\n                _this.hideMouse();\n            });\n        }\n    }, {\n        key: 'showMouse',\n        value: function showMouse() {\n            clearTimeout(this.timer);\n            this[0].style.cursor = 'default';\n            utils.addClass(this.els.ctrls, 'player-controls-show');\n        }\n    }, {\n        key: 'hideMouse',\n        value: function hideMouse() {\n            clearTimeout(this.timer);\n            this[0].style.cursor = 'none';\n            utils.removeClass(this.els.ctrls, 'player-controls-show');\n        }\n    }, {\n        key: 'loadLrc',\n        value: function loadLrc(src) {\n            var _this = this;\n            if (!src) return;\n            this.xhr.open('get', src, true);\n            _this.xhr.onreadystatechange = function () {\n                if (_this.xhr.readyState === 4 && _this.xhr.status === 200) {\n                    _this.lrcData = utils.readLyric(_this.xhr.responseText);\n                    var frag = document.createDocumentFragment(),\n                        lrcLine = document.createElement('p'),\n                        dataObj = {};\n                    lrcLine.className = 'player-lrc-line';\n                    for (var k in _this.lrcData) {\n                        lrcLine = lrcLine.cloneNode(true);\n                        lrcLine.innerText = _this.lrcData[k];\n                        dataObj[utils.time(k)] = lrcLine;\n                        frag.appendChild(lrcLine);\n                    }\n                    _this.els.lrc.appendChild(frag);\n                    utils.addClass(_this.els.lrc, 'player-lrc-show');\n                    _this.lrcData = dataObj;\n                    _this.lrcKeys = Object.keys(_this.lrcData);\n                    _this.lrcKeys.sort(function (a, b) {\n                        return Number(a) - Number(b);\n                    });\n                    _this.lrcLen = _this.lrcKeys.length;\n                    _this.showLrc(0);\n                }\n            };\n            _this.xhr.send();\n        }\n    }, {\n        key: 'showLrc',\n        value: function showLrc(curtime) {\n            for (var i = 0, delta; i < this.lrcLen; i++) {\n                delta = 1 - Math.abs(this.lrcKeys[i] - curtime) / 10;\n                if (delta > .96) {\n                    this.els.lrc.style.top = this.lrcTop - this.lrcData[this.lrcKeys[i]].offsetTop + 'px';\n                    for (var j = 0, idx = 0, opc = 0; j < 9; j++) {\n                        idx = i + j - 4;\n                        if (idx <= i) {\n                            opc += 25;\n                        } else {\n                            opc -= 25;\n                        }\n                        if (this.lrcKeys[idx]) {\n                            this.lrcData[this.lrcKeys[idx]].style.opacity = (opc - 25) / 100;\n                            utils.removeClass(this.lrcData[this.lrcKeys[idx]], 'player-lrc-line-active');\n                            utils.addClass(this.lrcData[this.lrcKeys[i]], 'player-lrc-line-active');\n                        }\n                    }\n                }\n            }\n        }\n    }, {\n        key: 'hideLrc',\n        value: function hideLrc() {\n            utils.removeClass(this.els.lrc, 'player-lrc-show');\n        }\n    }, {\n        key: 'update',\n        value: function update() {\n            var o = this.options;\n            this.currentTime = 0;\n            this.duration = this.lrcLen = 0;\n            this.lrcKeys = this.lrcData = null;\n            this.hideLrc();\n            if (o.src) this.els.video.src = o.src;\n            if (o.lrc) this.loadLrc(o.lrc);\n            this.els.video.poster = o.poster || '';\n        }\n    }, {\n        key: 'setLrcTop',\n        value: function setLrcTop() {\n            var lrcLineHeight = this.options.lrcSize,\n                lrcLines = this.els.lrc.children;\n            if (lrcLines[1]) {\n                lrcLineHeight = lrcLines[1].offsetTop;\n            }\n            switch (this.options.lrcMode) {\n                case 1:\n                    this.lrcTop = this[0].offsetHeight - lrcLineHeight;\n                    break;\n                default:\n                    this.lrcTop = this[0].offsetHeight / 2;\n            }\n        }\n    }, {\n        key: '__check__',\n        value: function __check__(name) {\n            if (this.private === 0) throw TypeError((name || '__check__') + '是私有方法，不可调用');\n        }\n    }], [{\n        key: 'toString',\n        value: function toString() {\n            return '{ [ class Player ] }';\n        }\n    }]);\n\n    return Player;\n}();\n\nwindow.Player = Player;\n\n//# sourceURL=webpack:///./Player/temp1528035626293.js?");

/***/ })

/******/ });