/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./Player/temp1527920817971.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./Player/temp1527920817971.js":
/*!*************************************!*\
  !*** ./Player/temp1527920817971.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar utils = {\n    addEvent: function addEvent(el, evt, fn) {\n        if (window.addEventListener) {\n            el.addEventListener(evt, fn);\n        } else if (window.attachEvent) {\n            el.addEventListener('on' + evt, fn);\n        }\n    },\n    timemat: function timemat(time) {\n        var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n        var h = !type ? 0 : Math.floor(time / 3600),\n            i = Math.floor((time - h * 3600) / 60),\n            s = Math.floor(time - h * 3600 - i * 60);\n\n        h = h < 10 ? '0' + h : h;\n        i = i < 10 ? '0' + i : i;\n        s = s < 10 ? '0' + s : s;\n        return (!type ? '' : h + ':') + i + ':' + s;\n    },\n    addClass: function addClass(el, cls) {\n        if (el.classList) {\n            el.classList.add(cls);\n        } else {\n            var list = el.className.split(/\\s+/);\n            if (list.indexOf(cls) === -1) {\n                list.push(cls);\n            }\n            el.className = list.join(' ');\n        }\n    },\n    removeClass: function removeClass(el, cls) {\n        if (el.classList) {\n            el.classList.remove(cls);\n        } else {\n            var list = el.className.split(/\\s+/),\n                index = void 0;\n            if ((index = list.indexOf(cls)) !== -1) {\n                list.splice(index, 1);\n            }\n            el.className = list.join(' ');\n        }\n    },\n    isFullscreen: function isFullscreen() {\n        return document.fullscreen || document.webkitIsFullScreen || document.mozFullScreen || false;\n    },\n    exitFullscreen: function exitFullscreen() {\n        if (document.exitFullscreen) {\n            document.exitFullscreen();\n        } else if (document.webkitCancelFullScreen) {\n            document.webkitCancelFullScreen();\n        } else if (document.webkitExitFullscreen) {\n            document.webkitExitFullscreen();\n        } else if (document.mozCancelFullScreen) {\n            document.mozCancelFullScreen();\n        } else if (document.msExitFullscreen) {\n            document.msExitFullscreen();\n        }\n    },\n    fullscreen: function fullscreen(el) {\n        if (el.requestFullscreen) {\n            el.requestFullscreen();\n        } else if (el.webkitRequestFullscreen) {\n            el.webkitRequestFullscreen();\n        } else if (el.mozRequestFullScreen) {\n            el.mozRequestFullScreen();\n        } else if (el.msRequestFullscreen) {\n            el.msRequestFullscreen();\n        }\n    }\n};\nfunction Player() {\n    var player = document.createElement('div'),\n        video = document.createElement('video'),\n        controls = document.createElement('div');\n\n    player.className = 'player';\n    video.className = 'player-video';\n    controls.className = 'player-controls';\n\n    controls.innerHTML = '\\n            <div class=\"player-slider\">\\n                <div data-name=\"buf\" class=\"player-slider-buf\"></div>\\n                <div data-name=\"thumb\" class=\"player-slider-thumb\"></div>\\n            </div>\\n            <div class=\"player-toolbar\">\\n                <div class=\"player-toolbar-left\">\\n                    <span data-name=\"btn\" class=\"player-btn\"></span>\\n                    <span data-name=\"cur\" class=\"player-current-time\">00:00</span>\\n                    <span data-name=\"dur\" class=\"player-duration\">/ 00:00</span>\\n                </div>\\n                <div class=\"player-toolbar-right\">\\n                    <span data-name=\"vswitch\" class=\"player-volume-switch\">\\n                        <i class=\"player-volume-switch-rect\"></i>\\n                        <i class=\"player-volume-switch-tri\"></i>\\n                        <i class=\"player-volume-switch-stat\">\\n                            <i class=\"player-volume-switch-dot1\"></i>\\n                            <i class=\"player-volume-switch-dot2\"></i>\\n                            <i class=\"player-volume-switch-dot3\"></i>\\n                            <i class=\"player-volume-switch-mute\">&times;</i>\\n                        </i>\\n                    </span>\\n                    <span class=\"player-volume-slider\">\\n                        <i data-name=\"vthumb\" class=\"player-volume-slider-thumb\"></i>\\n                    </span>\\n                    <span data-name=\"fscreen\" class=\"player-fullscreen\">\\n                        <i class=\"player-fullscreen-tl\"></i>\\n                        <i class=\"player-fullscreen-tr\"></i>\\n                        <i class=\"player-fullscreen-bl\"></i>\\n                        <i class=\"player-fullscreen-br\"></i>\\n                    </span>\\n                </div>\\n            </div>';\n\n    var names = controls.querySelectorAll('[data-name]'),\n        len = names.length,\n        i = 0,\n        els = {},\n        timer = void 0;\n\n    for (; i < len; i++) {\n        els[names[i].getAttribute('data-name')] = names[i];\n        names[i].removeAttribute('data-name');\n    }\n\n    els.vthumb.style.width = '50%';\n    video.volume = .5;\n\n    utils.addEvent(video, 'durationchange', function () {\n        els.dur.innerText = '/ ' + utils.timemat(this.duration);\n    });\n    utils.addEvent(video, 'timeupdate', function () {\n        try {\n            els.buf.style.width = video.buffered.end(video.buffered.length - 1) / this.duration * 100 + '%';\n        } catch (err) {}\n        els.cur.innerText = utils.timemat(this.currentTime);\n        els.thumb.style.width = this.currentTime / this.duration * 100 + '%';\n    });\n    utils.addEvent(els.thumb.parentNode, 'click', function (e) {\n        if (video.duration > 0) {\n            var percent = e.offsetX / this.offsetWidth;\n            els.thumb.style.width = percent * 100 + '%';\n            video.currentTime = Math.round(percent * video.duration);\n            els.cur.innerText = utils.timemat(video.currentTime);\n        }\n    });\n    utils.addEvent(els.btn, 'click', function () {\n        if (video.paused) {\n            video.play();\n            utils.addClass(els.btn, 'player-btn-playing');\n        } else {\n            video.pause();\n            utils.removeClass(els.btn, 'player-btn-playing');\n        }\n    });\n    utils.addEvent(els.vthumb.parentNode, 'click', function (e) {\n        video.volume = e.offsetX / this.offsetWidth;\n        els.vthumb.style.width = Math.round(video.volume * 100) + '%';\n    });\n    utils.addEvent(els.fscreen, 'click', function () {\n        if (utils.isFullscreen()) {\n            utils.exitFullscreen();\n            utils.removeClass(els.fscreen, 'player-fullscreen-on');\n        } else {\n            utils.fullscreen(player);\n            utils.addClass(els.fscreen, 'player-fullscreen-on');\n        }\n    });\n    utils.addEvent(els.vswitch, 'click', function () {\n        if (video.muted = !video.muted) {\n            utils.addClass(player, 'player-muted');\n        } else {\n            utils.removeClass(player, 'player-muted');\n        }\n    });\n    utils.addEvent(player, 'mousemove', function (e) {\n        if (timer) clearTimeout(timer);\n        if (e.target === video) {\n            player.style.cursor = 'default';\n            utils.addClass(controls, 'player-controls-show');\n            timer = setTimeout(hideMouse, 2000);\n        }\n    });\n    utils.addEvent(player, 'mouseleave', function () {\n        hideMouse();\n    });\n\n    function hideMouse() {\n        clearTimeout(timer);\n        player.style.cursor = 'none';\n        utils.removeClass(controls, 'player-controls-show');\n    }\n\n    player.appendChild(video);\n    player.appendChild(controls);\n\n    function setOptions(o) {\n        if ((typeof o === 'undefined' ? 'undefined' : _typeof(o)) === 'object') {\n            for (var key in o) {\n                video[key] = o[key];\n            }\n        } else if (typeof o === 'string' && arguments[1]) {\n            video[o] = arguments[1];\n        }\n    }\n    setOptions(arguments[0], arguments[1]);\n\n    return {\n        el: player,\n        set: setOptions,\n        get: function get(attr) {\n            if (attr) return video.getAttribute(attr);\n            return video;\n        }\n    };\n}\n\nwindow.Player = Player;\n\n//# sourceURL=webpack:///./Player/temp1527920817971.js?");

/***/ })

/******/ });